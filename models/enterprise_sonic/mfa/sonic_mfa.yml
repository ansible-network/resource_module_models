---
GENERATOR_VERSION: '1.0'

ANSIBLE_METADATA: |
    {
      'metadata_version': '1.1',
      'status': ['preview'],
      'supported_by': 'community',
      'license': 'Apache 2.0'
    }
NETWORK_OS: sonic
RESOURCE: mfa
COPYRIGHT: Copyright 2025 Dell Inc. or its subsidiaries. All Rights Reserved

DOCUMENTATION: |
    module: sonic_mfa
    version_added: ''
    short_description: Manage Multi-factor authentication (MFA) configurations on SONiC.
    description:
      - This module provides configuration management of MFA
        parameters for devices running SONiC.
      - Pre-configured host cert is required for MFA security profile, and
        ca-cert for RSA/CAC-PIV security profiles.
    author: 'Divya Narendran (@Divya-N3)'
    options:
      config:
        description:
          - Specifies MFA configurations.
        type: dict
        suboptions:
          mfa_global:
            description:
              - MFA Global configuration.
            type: dict
            suboptions:
              key_seed:
                description:
                  - Seed for generating secure key in MFA service.
                  - Plain text seed i.e. I(key_seed_encrypted=false) will be stored in encrypted format in
                    running-config, so idempotency will not be maintained and hence the task output will
                    always be I(changed=true).
                type: str
              key_seed_encrypted:
                description:
                  - Indicates whether I(key_seed) is plain text or encrypted.
                type: bool
              security_profile:
                description:
                  - Security profile contains the certificate for MFA service.
                type: str
              client_secret:
                description:
                  - Password used in basic authorization header for MFA REST API.
                  - Plain text password i.e. I(client_secret_encrypted=false) will be stored in encrypted
                    format in running-config, so idempotency will not be maintained and hence the task
                    output will always be I(changed=true).
                type: str
              client_secret_encrypted:
                description:
                  - Indicates whether I(client_secret) is plain text or encrypted.
                type: bool
          rsa_global:
            description:
              - RSA Global configuration.
            type: dict
            suboptions:
              security_profile:
                description:
                  - Security profile with CA-cert for validating RSA SecurID server.
                type: str
          rsa_servers:
            description:
              - RSA Server configuration.
            type: list
            elements: dict
            suboptions:
              hostname:
                description:
                  - RSA server's hostname or IP address.
                type: str 
                required: True
              server_port:
                description:
                  - Port number of the RSA SecurID server.
                  - Range 1025-49151.
                type: int
              client_id:
                description:
                  - Unique identifier of the system as a client of SecurID service, assigned by SecurID service.
                type: str
              client_key:
                description:
                  - Key associated with the client-id, assigned by SecurID service.
                  - Plain text key i.e. I(client_key_encrypted=false) will be stored in encrypted format
                    in running-config, so idempotency will not be maintained and hence the task output
                    will always be I(changed=true).
                type: str
              client_key_encrypted:
                description:
                  - Indicates whether I(client_key) is plain text or encrypted.
                type: bool
              connection_timeout:
                description:
                  - Timeout in seconds for connection to the SecurID server.
                  - Range 1-30.
                type: int
              read_timeout:
                description:
                  - Timeout in seconds to read from the SecurID server.
                  - Range 1-150.
                type: int
          cac_piv_global:
            description:
              - CAC-PIV Global configuration.
            type: dict
            suboptions:
              security_profile:
                description:
                  - Security profile for SSH access with CAC-PIV.
                type: str
              cert_username_field:
                description:
                  - SSH user certificate field for matching with SSH login username.
                type: str
                choices:
                  - common-name
                  - common-name-or-user-principal-name
                  - user-principal-name
              cert_username_match:
                description:
                  - Match option to parse the username from respective certificate field.
                type: str
                choices:
                  - 10digit-username
                  - first-name
                  - username-as-is
                  - username-without-domain
      state:
        description:
          - The state of the configuration after module completion.
          - C(merged) - Merges provided MFA configuration with on-device configuration.
          - C(replaced) - Replaces on-device MFA configuration with provided configuration.
          - C(overridden) - Overrides all on-device MFA configurations with the provided configuration.
          - C(deleted) - Deletes on-device MFA configuration.
        type: str
        choices:
          - merged
          - deleted
          - replaced
          - overridden
        default: merged
EXAMPLES:
  - deleted_example_01.txt
  - deleted_example_02.txt
  - merged_example_01.txt
  - replaced_example_01.txt
  - overridden_example_01.txt
