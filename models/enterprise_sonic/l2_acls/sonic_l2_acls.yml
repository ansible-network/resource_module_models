---
GENERATOR_VERSION: '1.0'
ANSIBLE_METADATA: |
    {
        'metadata_version': '1.1',
        'status': ['preview'],
        'supported_by': 'community',
        'license': 'Apache 2.0'
    }
NETWORK_OS: sonic
RESOURCE: l2_acls
COPYRIGHT: Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved
DOCUMENTATION: |
    module: sonic_l2_acls
    version_added: '2.1.0'
    short_description: Manage Layer 2 access control lists (ACL) configurations on SONiC
    description:
      - This module provides configuration management of Layer 2 access control lists (ACL)
        in devices running SONiC.
    author: 'Arun Saravanan Balachandran (@ArunSaravananBalachandran)'
    options:
      config:
        description:
          - Specifies Layer 2 ACL configurations.
        type: list
        elements: dict
        suboptions:
          name:
            description:
              - Specifies the ACL name.
            type: str
            required: true
          remark:
            description:
              - Specifies remark for the ACL.
            type: str
          rules:
            description:
              - List of rules with the ACL.
              - I(sequence_num), I(action), I(source) & I(destination) are required for adding a new rule.
              - If I(state=deleted), options other than I(sequence_num) are not considered.
            type: list
            elements: dict
            required_together: [[action, source, destination]]
            suboptions:
              sequence_num:
                description:
                  - Specifies the sequence number of the rule.
                  - The range is from 1 to 65535.
                type: int
                required: true
              action:
                description:
                  - Specifies the action taken on the matched Ethernet frame.
                type: str
                choices:
                  - deny
                  - discard
                  - do-not-nat
                  - permit
                  - transit
              source:
                description:
                  - Specifies the source of the Ethernet frame.
                  - I(address) and I(address_mask) are required together.
                  - I(any), I(host) and I(address) are mutually exclusive.
                type: dict
                required_one_of: [[any, host, address]]
                mutually_exclusive: [[any, host, address]]
                required_together: [[address, address_mask]]
                suboptions:
                  any:
                    description:
                      - Match any source MAC address.
                    type: bool
                  host:
                    description:
                      - MAC address of a single source host.
                    type: str
                  address:
                    description:
                      - Source MAC address.
                    type: str
                  address_mask:
                    description:
                      - Source MAC address mask.
                    type: str
              destination:
                description:
                  - Specifies the destination of the Ethernet frame.
                  - I(address) and I(address_mask) are required together.
                  - I(any), I(host) and I(address) are mutually exclusive.
                type: dict
                required_one_of: [[any, host, address]]
                mutually_exclusive: [[any, host, address]]
                required_together: [[address, address_mask]]
                suboptions:
                  any:
                    description:
                      - Match any destination MAC address.
                    type: bool
                  host:
                    description:
                      - MAC address of a single destination host.
                    type: str
                  address:
                    description:
                      - Destination MAC address.
                    type: str
                  address_mask:
                    description:
                      - Destination MAC address mask.
                    type: str
              ethertype:
                description:
                  - Specifies the EtherType of the Ethernet frame.
                  - Only one suboption can be specified for ethertype in a rule.
                type: dict
                mutually_exclusive: [[value, arp, ipv4, ipv6]]
                suboptions:
                  value:
                    description:
                      - Specifies the EtherType value to match as a hexadecimal string.
                      - The range is from 0x600 to 0xffff.
                    type: str
                  arp:
                    description:
                      - Match Ethernet frame with ARP EtherType (0x806).
                    type: bool
                  ipv4:
                    description:
                      - Match Ethernet frame with IPv4 EtherType (0x800).
                    type: bool
                  ipv6:
                    description:
                      - Match Ethernet frame with IPv6 EtherType (0x86DD).
                    type: bool
              vlan_id:
                description:
                  - Match Ethernet frame with the given VLAN ID.
                type: int
              vlan_tag_format:
                description:
                  - Match Ethernet frame with the given VLAN tag format.
                type: dict
                suboptions:
                  multi_tagged:
                    description:
                      - Match three of more VLAN tagged Ethernet frame.
                    type: bool
              dei:
                description:
                  - Match Ethernet frame with the given Drop Eligible Indicator (DEI) value.
                type: int
                choices:
                  - 0
                  - 1
              pcp:
                description:
                  - Match Ethernet frames using Priority Code Point (PCP) value.
                  - I(mask) is valid only when I(value) is specified.
                  - I(value) and I(traffic_type) are mutually exclusive.
                type: dict
                mutually_exclusive: [[value, traffic_type], [mask, traffic_type]]
                required_by: {mask: [value]}
                suboptions:
                  value:
                    description:
                      - Match Ethernet frame with the given PCP value.
                      - The range is from 0 to 7
                    type: int
                  mask:
                    description:
                      - Match Ethernet frame with given PCP value and mask.
                      - The range is from 0 to 7.
                    type: int
                  traffic_type:
                    description:
                      - Match Ethernet frame with PCP value for the given traffic type.
                      - C(be) - Match Ethernet frame with Best effort PCP (0).
                      - C(bk) - Match Ethernet frame with Background PCP (1).
                      - C(ee) - Match Ethernet frame with Excellent effort PCP (2).
                      - C(ca) - Match Ethernet frame with Critical applications PCP (3).
                      - C(vi) - Match Ethernet frame with Video, < 100 ms latency and jitter PCP (4).
                      - C(vo) - Match Ethernet frame with Voice, < 10 ms latency and jitter PCP (5).
                      - C(ic) - Match Ethernet frame with Internetwork control PCP (6).
                      - C(nc) - Match Ethernet frame with Network control PCP (7).
                    type: str
                    choices:
                      - be
                      - bk
                      - ee
                      - ca
                      - vi
                      - vo
                      - ic
                      - nc
              remark:
                description:
                  - Specifies remark for the ACL rule.
                type: str
      state:
        description:
          - The state of the configuration after module completion.
          - C(merged) - Merges provided L2 ACL configuration with on-device configuration.
          - C(replaced) - Replaces on-device configuration of the specified L2 ACLs with provided configuration.
          - C(overridden) - Overrides all on-device L2 ACL configurations with the provided configuration.
          - C(deleted) - Deletes on-device L2 ACL configuration.
        type: str
        choices:
          - merged
          - replaced
          - overridden
          - deleted
        default: merged
EXAMPLES:
  - merged_example_01.txt
  - replaced_example_01.txt
  - overridden_example_01.txt
  - deleted_example_01.txt
  - deleted_example_02.txt
