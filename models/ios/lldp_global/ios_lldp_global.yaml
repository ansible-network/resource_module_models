module: ios_lldp_global
short_description: Resource module to configure LLDP.
description: This module configures and manages the Link Layer Discovery Protocol(LLDP)
  attributes on IOS platforms.
version_added: 1.0.0
author: Sumit Jaiswal (@justjais)
notes:
  - Tested against Cisco IOSXE Version 17.3 on CML.
  - This module works with connection C(network_cli).
    See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)
options:
  config:
    description: A dictionary of LLDP options
    type: dict
    suboptions:
      holdtime:
        description:
        - LLDP holdtime (in sec) to be sent in packets.
        - Refer to vendor documentation for valid values.
        type: int
      reinit:
        description:
        - Specify the delay (in secs) for LLDP to initialize.
        - Refer to vendor documentation for valid values.
        - NOTE, if LLDP reinit is configured with a starting value, idempotency won't
          be maintained as the Cisco device doesn't record the starting reinit configured
          value. As such, Ansible cannot verify if the respective starting reinit
          value is already configured or not from the device side. If you try to apply
          starting reinit value in every play run, Ansible will show changed as True.
          For any other reinit value, idempotency will be maintained since any other
          reinit value is recorded in the Cisco device.
        type: int
      enabled:
        description:
        - Enable LLDP
        type: bool
      timer:
        description:
        - Specify the rate at which LLDP packets are sent (in sec).
        - Refer to vendor documentation for valid values.
        type: int
      tlv_select:
        description:
        - Selection of LLDP TLVs i.e. type-length-value to send
        - NOTE, if tlv-select is configured idempotency won't be maintained as Cisco
          device doesn't record configured tlv-select options. As such, Ansible cannot
          verify if the respective tlv-select options is already configured or not
          from the device side. If you try to apply tlv-select option in every play
          run, Ansible will show changed as True.
        type: dict
        suboptions:
          four_wire_power_management:
            description:
            - Cisco 4-wire Power via MDI TLV
            type: bool
          mac_phy_cfg:
            description:
            - IEEE 802.3 MAC/Phy Configuration/status TLV
            type: bool
          management_address:
            description:
            - Management Address TLV
            type: bool
          port_description:
            description:
            - Port Description TLV
            type: bool
          port_vlan:
            description:
            - Port VLAN ID TLV
            type: bool
          power_management:
            description:
            - IEEE 802.3 DTE Power via MDI TLV
            type: bool
          system_capabilities:
            description:
            - System Capabilities TLV
            type: bool
          system_description:
            description:
            - System Description TLV
            type: bool
          system_name:
            description:
            - System Name TLV
            type: bool
  running_config:
    description:
      - This option is used only with state I(parsed).
      - The value of this option should be the output received from the IOS device
        by executing the command B(show running-config | section ^lldp).
      - The state I(parsed) reads the configuration from C(running_config) option and
        transforms it into Ansible structured data as per the resource module's argspec
        and the value is then returned in the I(parsed) key within the result.
    type: str
  state:
    description:
      - The state the configuration should be left in
      - The states I(rendered), I(gathered) and I(parsed) does not perform any change
        on the device.
      - The state I(rendered) will transform the configuration in C(config) option to
        platform specific CLI commands which will be returned in the I(rendered) key
        within the result. For state I(rendered) active connection to remote host is
        not required.
      - The state I(gathered) will fetch the running configuration from device and transform
        it into structured data in the format as per the resource module argspec and
        the value is returned in the I(gathered) key within the result.
      - The state I(parsed) reads the configuration from C(running_config) option and
        transforms it into JSON format as per the resource module parameters and the
        value is returned in the I(parsed) key within the result. The value of C(running_config)
        option should be the same format as the output of command I(show running-config
        | include ip route|ipv6 route) executed on device. For state I(parsed) active
        connection to remote host is not required.
    type: str
    choices:
    - merged
    - replaced
    - deleted
    - rendered
    - gathered
    - parsed
    default: merged