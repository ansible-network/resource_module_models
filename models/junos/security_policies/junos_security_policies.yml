---
module: junos_security_policies
version_added: 2.12
short_description: Create and manage security policies on Juniper JUNOS devices
description: This module provides declarative creation and management of security policies on Juniper JUNOS devices
author: Pranav Bhatt (pbhatt@redhat.com)
requirements:
  - ncclient (>=v0.6.4)
notes:
  - This module requires the netconf system service be enabled on the device being managed.
  - (to be revisited)This module works with connection C(netconf). See L(the Junos OS Platform Options,https://docs.ansible.com/ansible/latest/network/user_guide/platform_junos.html).
  - (to be revisited)Tested against JunOS v18.4R1
options:
  config:
    description: A dictionary of security policies
    type: list
    elements: dict
    suboptions:
      policy_type:
        description:
          - The type of security policy being used
        choices:
          - global
          - stateful-firewall-rule
          - unified
          - user-role
          - zone-pair
        required: true
      match_direction:
        description:
          - (Stateful Firewall Rule)The type of security policy being used
        choices:
          - input
          - input-output
          - output
      policy_name:
        description:
          - Unique name of the policy being defined/refferred to 
        type: str
      from_zone:
        description:
          - The security zone from which the traffic originates from
        type: str
      to_zone:
        description:
          - The destination security zone of the traffic
        type: str
      description:
        description:
          - Description of the security policy
        type: str
      scheduler_name:
        description:
          - Name of the scheduler to run this policy
        type: str
      match:
        description: Configure security policy match criteria.
        type: dict
        suboptions:
          application:
            description:
              - Specify the IP or remote procedure call (RPC) application or set of applications to be used as match criteria.
            type: dict
            suboptions:
              application_names:
                description: Name of the predefined or custom application or application set used as match criteria.
                type: list
                elements: str
              any:
                description: Match any predefined or custom applications or application sets.
                type: bool
          dynamic_application:
            description:
              - Specify the dynamic applications or dynamic application groups used as match criteria within a security policy.
            type: dict
            suboptions:
              dynamic_application_names:
                description: Specify dynamic applications or dynamic application groups.
                type: list
                elements: str
              junos_all_new_apps:
                description: 
                  - Configure the application group of all newly added application signatures in the latest signature package.
                type: bool
              any:
                description:
                  - Configuring the dynamic application as any installs the policy with the application as a wildcard (default).
                type: bool
              no_application:
                description:
                  - Configuring the dynamic application as none(no_application) ignores classification results from AppID and does not use the dynamic application in security policy lookups.
                type: bool
          destination_address:
            description:
              - Define the matching criteria. You can specify one or more IP addresses, address sets, or wildcard addresses.
            type: dict
            suboptions:
              address:
                description:
                  - IP address, IP address set, or address book entry, or wildcard address (represented as A.B.C.D/wildcard_mask). 
                type: list
                elements: str
              any:
                description: Any IPv4 or IPv6 address
                type: bool
              any_ipv4:
                description: Any IPv4 address
                type: bool
              any_ipv6:
                description: Any IPv6 address
                type: bool
          source_address:
            description:
              - Define the matching criteria. You can specify one or more IP addresses, address sets, or wildcard addresses.
            type: dict
            suboptions:
              address:
                description:
                  - IP address, IP address set, or address book entry, or wildcard address (represented as A.B.C.D/wildcard_mask). 
                type: list
                elements: str
              any:
                description: Any IPv4 or IPv6 address
                type: bool
              any_ipv4:
                description: Any IPv4 address
                type: bool
              any_ipv6:
                description: Any IPv6 address
                type: bool
          source_identity:
            description:
              - Identifies users and roles to be used as match criteria for a policy. 
            type: dict
            suboptions:
              names:
                description: A list of specific users and roles.
                type: list
                elements: str
              any:
                description: 
                  - Any user or role, as well as the keywords authenticated_user, unauthenticated_user, 
                    and unknown_user.
                type: bool
              authenticated_user:
                description: All users and roles that have been authenticated.
                type: bool
              unauthenticated_user:
                description: 
                  - Any user or role that does not have an IP_address mapped to authentication sources and the authentication source is up and running.
                type: bool
              unknown_user:
                description: 
                  - Any user or role that does not have an IP address mapped to authentication sources, because the authentication source is disconnected from the SRX Series device. 
                type: bool
          source_identity_feed:
            description: (Global) Source identity feed name.
            type: str
          source_end_user_profile:
            description: Source end user profile name.
            type: str
          url_category:
            description: URL category.
            type: str
          from_zone:
            description: Identify a single source zone or multiple source zones to be used as a match criteria for a policy. 
            type: dict
            suboptions:
              zone_names:
                description: Name of single or multiple source zone
                type: list
                elements: str
              any:
                description: Match any zone 
                type: bool
          to_zone:
            description: Identify a single destination zone or multiple destination zones to be used as a match criteria for a policy. 
            type: dict
            suboptions:
              zone_names:
                description: Name of single or multiple destination zone
                type: list
                elements: str
              any:
                description: Match any zone 
                type: bool
          source_vrf:
            description: Traffic that originates from a VRF instance
            type: str
          destination_vrf:
            description: Traffic that is destined to a VRF instance
            type: str
          source_l3vpn_vrf_group:
            description: Traffic that originates from a VRF group
            type: str
          destination_l3vpn_vrf_group:
            description: Traffic that is destined to a VRF group
            type: str
          destination_address_excluded:
            description: Traffic with destination address excluded
            type: bool
          source_address_excluded:
            description: Traffic with source address excluded
            type: bool
      then:
        description: Specify the policy action to be performed when packets match the defined criteria.
        type: dict
        suboptions:
          count:
            description: 
              - Enable a count, in bytes or kilobytes, of all network traffic the policy allows to pass through the device in both directions; the originating traffic from the client to the server (from the from_zone to the to_zone), and the return traffic from the server to the originating client.
            type: dict
            suboptions:                  
              alarm:
                description:
                  - The alarm for when a configured threshold is exceeded
                type: dict
                suboptions:
                  per_minute_threshold:
                    description:
                      - threshold in kilobytes per minute
                    type: int 
                  per_second_threshold:
                    description:
                      - threshold in bytes per second
                    type: int
          deny:
            description: Block the service at the firewall. The device drops the packets.
            type: bool
          reject:
            description:
              - Block the service at the firewall. The device drops the packet and sends a TCP reset (RST) segment to the source host for TCP traffic and an ICMP “destination unreachable, port unreachable” message (type 3, code 3) for UDP traffic.
            type: dict
            suboptions:
              enable:
                description: flag to enable reject option
                type: bool
              reject_action:
                description:
                  - You can configure reject action with one of the following options for the dynamic_applications;
                  - profile - You can chose to provide a notification to the clients or redirect client request to an informative Web page when a policy blocks HTTP or HTTPS traffic with a deny or reject action.
                  - ssl_proxy - You can apply a redirect SSL proxy profile when a policy blocks HTTPS traffic with a reject action. When you apply am SSL proxy profile, SSL proxy decrypts the traffic and application identification functionality identifies the application. 
                type: dict
                suboptions:
                  profile:
                    description: You can chose to provide a notification to the clients or redirect client request to an informative Web page when a policy blocks HTTP or HTTPS traffic with a deny or reject action.
                    type: str
                  ssl_proxy:
                    description: You can apply a redirect SSL proxy profile when a policy blocks HTTPS traffic with a reject action. When you apply am SSL proxy profile, SSL proxy decrypts the traffic and application identification functionality identifies the application.
                    type: dict
                    suboptions:
                      profile_name:
                        description: Name of ssl proxy profile
                        type: str
          log:
            description: Log traffic information for a specific policy. Traffic information is logged when a session begins (session_init) or closes (session_close).
            choices:
              - session-close
              - session-init
          permit:
            description: Block the service at the firewall. The device drops the packets.
            type: dict
            suboptions:
              application_services:
                description: 
                  - Enable application services within a security policy.
                type: dict
                suboptions:
                  advanced_anti_malware_policy:
                    description:
                      - Specify advanced_anti_malware policy name.
                    type: str
                  application_firewall:
                    description:
                      - Specify the rule sets configured as part of application firewall to be applied to the permitted traffic. 
                    type: list
                    elements: dict
                    suboptions:
                      rule_set:
                        description: 
                          - name of rule set to use
                        type: str
                  application_traffic_control:
                    description:
                      - Specify the rule sets configured as part of AppQoS, application_aware quality of service, to be applied to the permitted traffic. 
                    type: list
                    elements: dict
                    suboptions:
                      rule_set:
                        description:
                          - name of rule set to use
                        type: str
                  gprs_gtp_profile:
                    description:
                      - Specify GPRS tunneling protocol profile name.
                    type: str
                  gprs_sctp_profile:
                    description:
                      - Specify GPRS stream control protocol profile name.
                    type: str
                  idp:
                    description:
                      - Configure Intrusion Detection and Prevention (IDP) for application services.
                    type: str
                  idp_policy_name:
                    description:
                      - Specify IDP policy name.
                    type: str
                  packet_capture:
                    description:
                      - Option to enable or disable packet capture
                    type: bool
                  redirect_wx:
                    description:
                      - Specify the WX redirection needed for the packets that arrive from the LAN. 
                    type: str
                  reverse_redirect_wx:
                    description:
                      - Specify the WX redirection needed for the reverse flow of the packets that arrive from the WAN. 
                    type: str
                  security_intelligence_policy:
                    description:
                      - Specify security_intelligence policy name.
                    type:
                  security_intelligence:
                    description: Specify the security intelligence feed post action.
                    type: dict
                    suboptions:
                      add_destination_identity_to_feed:
                        description: Add destination user identity to the security feed.
                        type: str
                      add_destination_ip_to_feed:
                        description: Add the destination IP address to the security feed.
                        type: str
                      add_source_ip_to_feed:
                        description: Add the source IP address to the security feed.
                        type: str
                      add_source_identity_to_feed:
                        description: Add source user identity to the security feed.
                        type: str
                  ssl_proxy:
                    description: You can apply a redirect SSL proxy profile when a policy blocks HTTPS traffic with a reject action.
                    type: dict
                    suboptions:
                      profile_name:
                        description: Name of SSL proxy profile
                        type: str
                  uac_policy:
                    description:
                      - Enable Unified Access Control (UAC) for the security policy.
                    type: dict
                    suboptions:
                      captive_portal:
                        description:
                          - Specify the preconfigured security policy for captive portal on the Junos OS Enforcer to enable the captive portal feature.
                        type: str
                  utm_policy:
                    description:
                      - Specify UTM policy name.
                    type: str
                  web_proxy:
                    description:
                      - Specify secure Web proxy profile name.
                    type: dict
                    suboptions:
                      profile_name:
                        description:
                          - Specify secure Web proxy profile name.
                        type: str
              destination_address:
                description: 
                  - Specify whether the traffic permitted by the security policy is limited to packets 
                    where the destination IP address has been translated by means of a destination NAT rule 
                    or to packets where the destination IP address has not been translated. 
                choices:
                  - drop-translated
                  - drop-untranslated
              firewall_authentication:
                description: Configure firewall authentication methods.
                type: dict
                suboptions:
                  pass_through:
                    description:
                    type: dict
                    suboptions:
                      access_profile:
                        description:
                          - Specify the name of the access profile.
                        type: str
                      client_match:
                        description:
                          - Specify the name of the users or user groups in a profile who are allowed access by this policy.
                        type: str
                      ssl_termination_profile:
                        description:
                          - Specify the SSL termination profile used for SSL offloading.
                        type: str
                      web_redirect:
                        description:
                          - Enable redirecting an HTTP request to the device and redirecting the client system to a webpage for authentication.
                        type: bool
                      web_redirect_to_https:
                        description:
                          - Redirect unauthenticated HTTP requests to the internal HTTPS Web server of the device.
                        type: bool
                      auth_only_browser:
                        description:
                          - Configure firewall authentication to ignore non-browser HTTP/HTTPS traffic.
                        type: bool
                      auth_only_browser_with_user_agent:
                        description:
                          - Use the auth-user-agent in conjunction with auth-only-browser.
                        type: dict
                        suboptions:
                          auth_user_agent:
                            description:
                              - Specify a user-agent value to be used to verify that the user's browser traffic is HTTP/HTTPS traffic.
                            type: str
                      auth_user_agent:
                        description:
                          - Specify a user-agent value to be used to verify that the user's browser traffic is HTTP/HTTPS traffic.
                        type: str
                  push_to_identity_management:
                    description: enables pushing to identity management devices
                    type: bool
                  user_firewall:
                    description:
                      - Configure user role firewall authentication, and map the source IP address to the username and its associated roles (groups).
                    type: dict
                    suboptions:
                      access_profile:
                        description:
                          - Specify the name of the access profile to be used for authentication.
                        type: str
                      domain:
                        description:
                          - Specify the name of the domain where firewall authentication occurs in the event that the Windows Management Instrumentation client (WMIC)
                            is not available to get IP_to_user mapping for the integrated user firewall feature.
                        type: str
                      ssl_termination_profile:
                        description:
                          - For HTTPS traffic, specify the name of the SSL termination profile used for SSL offloading.
                        type: str
                      web_redirect:
                        description:
                          - Enable webpage redirection
                        type: bool
                      web_redirect_to_https:
                        description:
                          - Enable redirection to HTTPS
                        type: bool
                      auth_only_browser:
                        description:
                          - Configure firewall authentication to ignore non-browser HTTP/HTTPS traffic.
                        type: bool
                      auth_user_agent:
                        description:
                          - Specify a user-agent value to be used to verify that the user's browser traffic is HTTP/HTTPS traffic.
                        type: str
                  web_authentication:
                    description:
                      - Specify that the policy allows access to users who have previously been authenticated by Web authentication.
                    type: dict
                    suboptions:
                      client_match:
                        description:
                          - Username or user group name.
                        type: str user_or_group_name
              services_offload:
                description:
                  - Enable services offloading within a security policy for SRX4600, SRX5400, SRX5600, and SRX5800 devices.
                type: bool
              tcp_options:
                description:
                  - Specify the TCP options for each policy. You can configure sync and sequence checks for each policy based on your requirements,
                    and, because each policy has two directions, you can configure a TCP MSS value for both directions or for just one direction.
                type: dict
                suboptions:
                  initial_tcp_mss:
                    description:
                      - Configure the TCP maximum segment size (MSS) for packets that arrive at the ingress interface (initial direction),
                        match a specific policy, and for which a session is created. 
                    type: int
                  reverse_tcp_mss:
                    description:
                      - Configure the TCP maximum segment size (MSS) for packets that match a specific policy and travel in the reverse direction of a session.
                    type: int
                  sequence_check_required:
                    description:
                      - Enable sequence check per policy. The sequence_check_required value overrides the global value no_sequence_check.
                    type: bool
                  syn_check_required:
                    description:
                      - Enable sync check per policy. The syn_check_required value overrides the global value no_syn_check.
                    type: bool
                  window_scale:
                    description:
                      - Enable window_scale per policy.
                    type: bool
              tunnel:
                description: Encapsulate outgoing IP packets and decapsulate incoming IP packets.
                type: dict
                suboptions:
                  ipsec_group_vpn:
                    description:
                      - name of the ipsec group policy
                    type: str
                  ipsec_vpn:
                    description:
                      - name of the ipsec policy
                    type: str
                  pair_policy:
                    description:
                      - name of the pair policy
                    type: str
  running_config:
    description:
      - This option is used only with state I(parsed).
      - The value of this option should be the output received from the JunOS device
        by executing the command B(show security policies global detail).
      - The state I(parsed) reads the configuration from C(running_config) option and
        transforms it into Ansible structured data as per the resource module's argspec
        and the value is then returned in the I(parsed) key within the result.
    type: str
  state:
    choices:
    - merged
    - replaced
    - overridden
    - deleted
    - rendered
    - gathered
    - parsed
    default: merged
    description:
      - The state the configuration should be left in
      - The states I(rendered), I(gathered) and I(parsed) does not perform any change
        on the device.
      - The state I(rendered) will transform the configuration in C(config) option to
        platform specific CLI commands which will be returned in the I(rendered) key
        within the result. For state I(rendered) active connection to remote host is
        not required.
      - The states I(replaced) and I(overridden) have identical
        behaviour for this module.
      - The state I(gathered) will fetch the running configuration from device and transform
        it into structured data in the format as per the resource module argspec and
        the value is returned in the I(gathered) key within the result.
      - The state I(parsed) reads the configuration from C(running_config) option and
        transforms it into JSON format as per the resource module parameters and the
        value is returned in the I(parsed) key within the result. The value of C(running_config)
        option should be the same format as the output of command
        I(show security policies detail) executed on device. For state I(parsed) active
        connection to remote host is not required.
    type: str
...