module: nxos_spanning_tree_global
short_description:
  - Resource module to configure spanning tree.
description:
  - This module configures and manages the attributes of Spanning-tree on Cisco NXOS.
version_added: 6.0.3
author: Vinay Mulugund (@roverflow)
notes:
  - Tested against NX-OS 9.3.6.
  - This module works with connection C(network_cli) and C(httpapi).
    See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_nxos.html)
options:
  config:
    description: A dict of Spanning-tree options.
    type: dict
    suboptions:
      bridge_assurance:
        description: Enable bridge assurance.
        type: bool
      bridge_domain:
        decsription: Bridge-Domain Spanning Trees range.
        type: str
      fcoe:
        description: Enable STP for FCoE VLANs.
        type: bool
      lc_issu:
        description: Configure Linecard ISSU type.
        type: str
        choices:
          - auto
          - disruptive
          - non-disruptive
      loopguard_default:
        description: Spanning tree loopguard .
        type: bool
      mode:
        description: Spanning tree mode.
        type: str
        choices:
          - mst
          - rapid-pvst
      pathcost_method:
        description: Spanning tree pathcost options.
        type: str
        choices:
          - long
          - short
      port_type:
        description: Spanning tree port type.
        type: dict
        mutually_exclusive: [["edge", "network", "default"]]
        suboptions:
          edge:
            description: Enable edge port type.
            type: str
            choices:
              - bpdufilter
              - bpduguard
              - default
          network:
            description: Enable network port type.
            type: bool
          default:
            description: Enable default port type.
            type: bool
      vlan:
        description: Spanning tree VLAN range.
        type: str
  running_config:
    description:
      - This option is used only with state I(parsed).
      - The value of this option should be the output received from the NXOS device by
        executing the command B(show running-config | section ^spanning-tree).
      - The state I(parsed) reads the configuration from C(running_config) option and
        transforms it into Ansible structured data as per the resource module's argspec
        and the value is then returned in the I(parsed) key within the result.
    type: str
  state:
    choices:
      - merged
      - replaced
      - overridden
      - deleted
      - rendered
      - gathered
      - purged
      - parsed
    default: merged
    description:
      - The state the configuration should be left in
      - The states I(rendered), I(gathered) and I(parsed) does not perform any change
        on the device.
      - The state I(rendered) will transform the configuration in C(config) option to
        platform specific CLI commands which will be returned in the I(rendered) key
        within the result. For state I(rendered) active connection to remote host is
        not required.
      - The state I(gathered) will fetch the running configuration from device and transform
        it into structured data in the format as per the resource module argspec and
        the value is returned in the I(gathered) key within the result.
      - The state I(parsed) reads the configuration from C(running_config) option and
        transforms it into JSON format as per the resource module parameters and the
        value is returned in the I(parsed) key within the result. The value of C(running_config)
        option should be the same format as the output of command I(show running-config
        | include ip route|ipv6 route) executed on device. For state I(parsed) active
        connection to remote host is not required.
      - The state I(purged) negates virtual/logical interfaces that are specified in task
        from running-config.
    type: str
